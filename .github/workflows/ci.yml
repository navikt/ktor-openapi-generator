name: CI test

on:
  push:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      actions: read
      checks: write
      id-token: write
    name: Build & Test

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup JDK
        uses: actions/setup-java@v4.7.0
        with:
          distribution: 'temurin'
          java-version: 23
      - name: Setup Gradle for a non-wrapper project
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper

      - name: Build lib
        run: gradle assemble

      - name: Run tests
        run: gradle test --info

      - uses: paulhatch/semantic-version@v5.4.0
        id: tag
        with:
          bump_each_commit: true
          tag_prefix: ""

      - id: notes
        run: |
          randomDeliHmiter=${RANDOM}
          text=$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s" | sed ':a;N;$!ba;s/\n/\n\n/g')
          echo 'CHANGELOG<<$randomDelimiter' >> $GITHUB_OUTPUT
          echo -e "$text" >> $GITHUB_OUTPUT
          echo '$randomDelimiter' >> $GITHUB_OUTPUT

      - name: Publish
        run: gradle -Pversion=${{ steps.tag.outputs.version }} publish
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          release_name: ${{ steps.tag.outputs.version }}
          body: |
            Changes in this Release
            ${{ steps.notes.outputs.CHANGELOG }}

      - name: Generate API documentation
        run: gradle -Pversion=${{ steps.tag.outputs.version }} :dokkaGenerate

      - name: Deploy API documentation to Github Pages
        uses: JamesIves/github-pages-deploy-action@v4.7.3
        with:
          folder: build/docs
